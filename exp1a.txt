 import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam

# 1. XOR Input Data
X = np.array([[0, 0],
              [0, 1],
              [1, 0],
              [1, 1]])
y = np.array([[0], [1], [1], [0]])
model = Sequential()
model.add(Dense(8, input_dim=2, activation='relu'))  # 2 input nodes (X1, X2)
model.add(Dense(1, activation='sigmoid'))  # Output layer for binary classification (0 or 1)
model.compile(loss='binary_crossentropy', optimizer=Adam(), metrics=['accuracy'])
model.fit(X, y, epochs=5000, verbose=0)
loss, accuracy = model.evaluate(X, y)
print(f"Model Accuracy: {accuracy * 100:.2f}%")
predictions = model.predict(X)
print("Predictions:")
print(np.round(predictions))